#+TITLE: Tema 1: Introducción a la Programación
#+DATE:
#+STARTUP: beamer
#+SETUPFILE: config.org

* ¿Por qué programar?
  :PROPERTIES:
  :beamer_opt: plain
  :END:

#+BEGIN_EXPORT latex
\href{https://www.youtube.com/watch?v=QvyTEx1wyOY}{\includegraphics[height=0.9\textheight]{figs/steve-jobs-quote.jpg}}
#+END_EXPORT

* ¿Qué hay dentro de un ordenador?
  :PROPERTIES:
  :beamer_opt: plain
  :END:

#+BEGIN_EXPORT latex
\href{http://www.gcflearnfree.org/computerbasics/inside-a-computer/1/}{\includegraphics[height=0.9\textheight]{figs/InsideComputer.png}}
#+END_EXPORT

* ¿Cómo funciona un ordenador?
  :PROPERTIES:
  :beamer_opt: plain
  :END:

#+BEGIN_EXPORT latex
\href{https://youtu.be/DKGZlaPlVLY?t=42}{\includegraphics[height=0.9\textheight]{figs/HowComputersWork.png}}
#+END_EXPORT

* Algoritmo y Programa Informático 
- *Algoritmo*: método para resolver un problema. 
- *Programa informático*:
  - una colección de instrucciones expresadas de forma que un ordenador pueda realizar una tarea.
  - es una implementación del algoritmo para un determinado sistema informático.
- *Lenguaje máquina*: los ordenadores utilizan el sistema de numeración binario (dos dígitos, 0 y 1) para almacenar información.
- Las instrucciones del programa deben estar codificadas como sucesiones de 0s y 1s.
#+BEGIN_CENTER
01001000 01101111 01101100 01100001
#+END_CENTER

* ¿Qué es un lenguaje de programación?

Un lenguaje artificial que emplea *expresiones similares al lenguaje humano* y un *traductor* para convertir a código binario.
  - Lenguaje de *bajo nivel*: similar al lenguaje máquina, adaptado a un procesador concreto.
  - Lenguaje de *alto nivel*: similar al lenguaje natural, de uso general.

* Ejemplo de lenguaje de bajo nivel

** Ensamblador
 #+BEGIN_EXAMPLE
STACK	SEGMENT STACK
      	DW 64 DUP (?)
STACK 	ENDS
DATA	SEGMENT
SALUDO 	DB “Hola Mundo",13,10,"$" ; Cadena
DATA   	ENDS
CODE	SEGMENT
	ASSUME CS:CODE, DS:DATA, SS:STACK
INICIO:
	MOV AX,DATA
	MOV DS,AX
	MOV DX,OFFSET SALUDO
	MOV AH,09H
	INT 21H
	MOV AH,4CH
	INT 21H
CODE	    ENDS
	END INICIO
 #+END_EXAMPLE

* Ejemplo de lenguaje de alto nivel

** Python
 #+BEGIN_SRC python
print "Hola Mundo"
 #+END_SRC

** R
#+begin_src R
print("Hola Mundo")
#+end_src

** Más Ejemplos
 https://es.wikipedia.org/wiki/Anexo:Ejemplos_de_implementaci%C3%B3n_del_%C2%ABHola_mundo%C2%BB

* Lenguajes de alto nivel

[[file:figs/TIOBEindex.png]]

[[http://www.tiobe.com/tiobe-index/]]

* C

** Características
- Lenguaje de nivel /medio/.
- De propósito general
- Compacto (sólo 32 palabras)
- Estructurado. Permite reutilizar el código.
- Funciona en plataformas diferentes.

** Historia
- C (Ritchie, 1972. Laboratorios Bell).
- ANSI C American National Standards Institute C (1989).
- C99 (ISO/IEC 9899, 1999).
* Ejemplo de programa en C

#+begin_src C
#include <stdio.h>

int main()
{
  printf("Hola Mundo\n");

  return 0;
}
#+end_src
* Desarrollo de programas en C
# #+BEGIN_SRC plantuml :file figs/programaC.png
# scale 2
# repeat 
#        :Editor;
# note right
# Programa fuente (.c)
# end note
#        :Preprocesador;
# note right 
# Cabeceras #include
# end note
#        :Compilador;
# repeatwhile (¿Errores?) is (Si) not (No)
# :Programa objeto (.obj/.o);
# :Enlazador;
# note right
# Librerías
# end note
# :Programa ejecutable (.exe);
# note right
# Depurador
# end note
# end;
# #+END_SRC

#+ATTR_LATEX: :height 0.9\textheight
#+RESULTS:
[[file:figs/programaC.png]]


* Cómo programar

Extraído de [[https://arxiv.org/pdf/1210.0530v4.pdf][Best Practices for Scientific Computing]]

- Write programs for people, not computers.
- Automate repetitive tasks
- Use the computer to record history
- Make incremental changes
- Use version control
- Don't repeat yourself (or others)
- Plan for mistakes
- Optimize software only after it works correctly
- Document design and purpose, not mechanics
- Collaborate

# Local Variables:
# ispell-local-dictionary: "spanish"
# End:

